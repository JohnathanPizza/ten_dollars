; vr0 pointer to code
; vr1 pointer to adjustments
; vr4 assemble location, will normally be 0x0000
>PROGRAM_ADJUST
	PHA
	PHY
	PHX
	LDY.I	1
	LDA.Z	VR1
	STA.Z	VR8
	LDA.Z	VR1 1
	STA.Z	VR8 1
>_PROGRAM_ADJUST_LOOP
	LDA.ZP	VR8	; get next pointer from adj list
	STA.Z	VR9
	LDA.ZPY	VR8
	STA.Z	VR9 1

	LDA.Z	VR9	; check if 0000
	ORA.Z	VR9 1
	BEQ	_PROGRAM_ADJUST_LOOP_EXIT

	CLC
	LDA.Z	VR9	; adding pointer offset to load base
	ADC.Z	VR0
	STA.Z	VR9
	LDA.Z	VR9 1
	ADC.Z	VR0 1
	STA.Z	VR9 1
	
	SEC
	LDA.ZP	VR9	; subtract assemble location
	SBC.Z	VR4
	STA.ZP	VR9
	LDA.ZPY	VR9
	SBC.Z	VR4 1
	STA.ZPY	VR9

	CLC
	LDA.ZP	VR9	; adding base position to adj spot
	ADC.Z	VR0
	STA.ZP	VR9
	LDA.ZPY	VR9
	ADC.Z	VR0 1
	STA.ZPY	VR9

	JSR	INC8
	JSR	INC8

	BRA	_PROGRAM_ADJUST_LOOP
>_PROGRAM_ADJUST_LOOP_EXIT
	PLX
	PLY
	PLA
	RTS
