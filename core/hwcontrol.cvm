; HWCONTROL.CVM
; ===
; HW_ENABLE_RAM2LO
; HW_ENABLE_RAM2HI
; HW_ENABLE_VIA
; HW_DISABLE_RAM2
; HW_DISABLE_VIA

; each of these functions controls which hardware modules are enabled
; the state of the modules are tracked in memory at HW_STATUS

>HW_ENABLE_NVRAMLO
	PHA				; store A
	LDA.I	HW_RAM2LO		; load constant for setting RAM2 low
	BRA	_HW_ENABLE_COMMON	; go to common enable code

>HW_ENABLE_NVRAMHI
	PHA				; store A
	LDA.I	HW_RAM2HI		; load constant for setting RAM2 high
	BRA	_HW_ENABLE_COMMON	; go to common enable code

>HW_ENABLE_VIA
	PHA				; store A
	LDA.I	HW_VIA			; load constant for setting VIA
	BRA	_HW_ENABLE_COMMON	; go to common enable code

>HW_DISABLE_NVRAM
	PHA				; store A
	LDA.I	- 1 - HW_RAM2HI		; load constant for clearing RAM2
	BRA	_HW_DISABLE_COMMON	; go to common disable code

>HW_DISABLE_VIA
	PHA				; store A
	LDA.I	- 1 - HW_VIA		; load constant for clearing VIA
	BRA	_HW_DISABLE_COMMON	; go to common disable code

>_HW_ENABLE_COMMON
	ORA	HW_STATUS		; set corresponding bit in status
	BRA	_HW_ED_UPDATE		; go to updating

>_HW_DISABLE_COMMON
	AND	HW_STATUS		; clear corresponding bit in status
	BRA	_HW_ED_UPDATE		; go to updating

>_HW_ED_UPDATE
	STA	HW_STATUS		; update hardware status value in mem
	PHX				; store X
	TAX				; copy hardware values to X for offset calc
	STA.X	HW_ENABLE_ADDR		; update hardware
	PLX				; restore X
	PLA				; restore A
	RTS				; return
