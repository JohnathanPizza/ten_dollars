; does the file operation in VR6/1
; return value in VR11/1, 0 if succeeded else fail
; create - vr0 name
; open - vr0 name
; rename - vr0 name
; jump - vr4 position
; read - ret vr11/2 value
; write - vr4/1 value
; getpos - vr10 ret pos
; getid - vr11/2 current file id
; exist - vr0 name vr11/1 return (0=noexist, 1=exist, 0xff=err)
; info - vr1 ptr to str buffer (16) if 0 str len then no file, vr4/1 file id
; diskname - vr1 ptr to str buffer (16)
; diskrename - vr0 ptr to string

>BRK_FILE_OP
	LDA	IO_FILE_CLAIM		; load file claim to check permission
	CMP	PROC_ACTIVE_ID		; compare to current proc id
	BNE	_BRK_FILE_OP_NOPERM	; if not equal then fail
	LDA.Z	VR6			; load file op code
	ASL				; *2 for pointer offset
	TAX				; move pointer offset to X
	JMP.XP	_BRK_FILE_OP_ARR	; jump to correct function for file op
>_BRK_FILE_OP_NOPERM
	LDA.I	0XFF			; load fail value
	STA.Z	VR11			; store in VR11/1
	JMP	PROC_UNPAUSE		; return to proc
>_BRK_FILE_OP_END
	JSR	PROC_LEAVE		; save proc
	JMP	SERVICE_CYCLE_BEGIN	; start new cycle

>_BRK_FILE_OP_ARR
$_BRK_FILE_OP_CREATE
$_BRK_FILE_OP_OPEN_A
$_BRK_FILE_OP_OPEN_B
$_BRK_FILE_OP_CLOSE_A
$_BRK_FILE_OP_CLOSE_B
$_BRK_FILE_OP_DESTROY_A
$_BRK_FILE_OP_DESTROY_B
$_BRK_FILE_OP_RENAME_A
$_BRK_FILE_OP_RENAME_B
$_BRK_FILE_OP_JUMP_A
$_BRK_FILE_OP_JUMP_B
$_BRK_FILE_OP_READ_A
$_BRK_FILE_OP_READ_B
$_BRK_FILE_OP_WRITE_A
$_BRK_FILE_OP_WRITE_B
$_BRK_FILE_OP_GETPOS_A
$_BRK_FILE_OP_GETPOS_B
$_BRK_FILE_OP_GETID_A
$_BRK_FILE_OP_GETID_B
$_BRK_FILE_OP_EXIST
$_BRK_FILE_OP_INFO
$_BRK_FILE_OP_FORMAT
$_BRK_FILE_OP_DISK_NAME
$_BRK_FILE_OP_DISK_RENAME
$_BRK_FILE_OP_DISK_TEST

>_BRK_FILE_OP_CREATE
	JSR	FILE_CREATE
	STA.Z	VR11
	JMP	_BRK_FILE_OP_END

>_BRK_FILE_OP_OPEN_A
	JSR	FILE_OPEN_A
	STA.Z	VR11
	JMP	_BRK_FILE_OP_END

>_BRK_FILE_OP_OPEN_B
	JSR	FILE_OPEN_B
	STA.Z	VR11
	JMP	_BRK_FILE_OP_END

>_BRK_FILE_OP_CLOSE_A
	JSR	FILE_CLOSE_A
	STA.Z	VR11
	JMP	_BRK_FILE_OP_END

>_BRK_FILE_OP_CLOSE_B
	JSR	FILE_CLOSE_B
	STA.Z	VR11
	JMP	_BRK_FILE_OP_END

>_BRK_FILE_OP_DESTROY_A
	JSR	FILE_DESTROY_A
	STA.Z	VR11
	JMP	_BRK_FILE_OP_END

>_BRK_FILE_OP_DESTROY_B
	JSR	FILE_DESTROY_B
	STA.Z	VR11
	JMP	_BRK_FILE_OP_END

>_BRK_FILE_OP_RENAME_A
	JSR	FILE_RENAME_A
	STA.Z	VR11
	JMP	_BRK_FILE_OP_END

>_BRK_FILE_OP_RENAME_B
	JSR	FILE_RENAME_B
	STA.Z	VR11
	JMP	_BRK_FILE_OP_END

>_BRK_FILE_OP_JUMP_A
	JSR	FILE_JUMP_A
	STA.Z	VR11
	JMP	_BRK_FILE_OP_END

>_BRK_FILE_OP_JUMP_B
	JSR	FILE_JUMP_B
	STA.Z	VR11
	JMP	_BRK_FILE_OP_END

>_BRK_FILE_OP_READ_A
	JSR	FILE_READ_A
	PHA
	LDA.Z	VR11
	STA.Z	VR11 1
	PLA
	STA.Z	VR11
	JMP	_BRK_FILE_OP_END

>_BRK_FILE_OP_READ_B
	JSR	FILE_READ_B
	PHA
	LDA.Z	VR11
	STA.Z	VR11 1
	PLA
	STA.Z	VR11
	JMP	_BRK_FILE_OP_END

>_BRK_FILE_OP_WRITE_A
	LDA.Z	VR4
	JSR	FILE_WRITE_A
	STA.Z	VR11
	JMP	_BRK_FILE_OP_END

>_BRK_FILE_OP_WRITE_B
	LDA.Z	VR4
	JSR	FILE_WRITE_B
	STA.Z	VR11
	JMP	_BRK_FILE_OP_END

>_BRK_FILE_OP_GETPOS_A
	LDA	IO_FILE_A_POS
	STA.Z	VR10
	LDA	IO_FILE_A_POS 1
	STA.Z	VR10 1
	JMP	_BRK_FILE_OP_END
	
>_BRK_FILE_OP_GETPOS_B
	LDA	IO_FILE_B_POS
	STA.Z	VR10
	LDA	IO_FILE_B_POS 1
	STA.Z	VR10 1
	JMP	_BRK_FILE_OP_END

>_BRK_FILE_OP_GETID_A
	LDA	IO_FILE_A_ID
	STA.Z	VR11 1
	JMP	_BRK_FILE_OP_END

>_BRK_FILE_OP_GETID_B
	LDA	IO_FILE_B_ID
	STA.Z	VR11 1
	JMP	_BRK_FILE_OP_END

>_BRK_FILE_OP_EXIST
	JSR	FILE_FIND
	STA.Z	VR11
	CMP.I	0
	BEQ	_BRK_FILE_OP_EXIST_RET
	CMP.I	0XFF
	BEQ	_BRK_FILE_OP_EXIST_RET
	LDA.I	1
	STA.Z	VR11
>_BRK_FILE_OP_EXIST_RET
	JMP	_BRK_FILE_OP_END

>_BRK_FILE_OP_INFO
	LDA.I	0XFF
	STA.Z	VR11

	LDA.Z	VR4
	DEC
	CMP.I	79
	BGE	_BRK_FILE_OP_INFO_EXIT

	LDA.Z	VR5
	PHA
	LDA.Z	VR4
	STA.Z	VR5
	PHA
	LDA.Z	VR4 1
	PHA
	LDA.Z	VR0
	PHA
	LDA.Z	VR0 1
	PHA

	LDA.Z	VR5
	DEC
	AND.I	0XF
	ASL
	ASL
	ASL
	ASL
	STA.Z	VR0
	LDA.I	FLOPPY_PAGE > 8
	STA.Z	VR0 1
	STZ.Z	VR4
	LDA.Z	VR5
	DEC
	LSR
	LSR
	LSR
	LSR
	INC
	INC
	STA.Z	VR4 1
	JSR	RETRY_FLOPPY_READ
	CMP.I	0
	BNE	_BRK_FILE_OP_INFO_CLEAN
	LDA.I	16
	STA.Z	VR4
	JSR	STRNCPY
	LDA.I	0
>_BRK_FILE_OP_INFO_CLEAN
	STA.Z	VR11
	PLA
	STA.Z	VR0 1
	PLA
	STA.Z	VR0
	PLA
	STA.Z	VR4 1
	PLA
	STA.Z	VR4
	PLA
	STA.Z	VR5
>_BRK_FILE_OP_INFO_EXIT
	JMP	_BRK_FILE_OP_END

>_BRK_FILE_OP_FORMAT
	JSR	FLOPPY_FORMAT
	STA.Z	VR11
	JMP	_BRK_FILE_OP_END

>_BRK_FILE_OP_DISK_NAME
	LDA.Z	VR4
	PHA
	LDA.Z	VR4 1
	PHA

	STZ.Z	VR4
	LDA.I	7
	STA.Z	VR4 1
	JSR	RETRY_FLOPPY_READ
	CMP.I	0
	BNE	_BRK_FILE_OP_DISK_NAME_FAIL

	LDA.Z	VR0
	PHA
	LDA.Z	VR0 1
	PHA

	STZ.Z	VR0
	LDA.I	FLOPPY_PAGE > 8
	STA.Z	VR0 1
	LDA.I	16
	STA.Z	VR4
	JSR	STRNCPY

	PLA
	STA.Z	VR0 1
	PLA
	STA.Z	VR0
	
	STZ.Z	VR11
	PLA
	STA.Z	VR4 1
	PLA
	STA.Z	VR4
	JMP	_BRK_FILE_OP_END
>_BRK_FILE_OP_DISK_NAME_FAIL
	STA.Z	VR11
	PLA
	STA.Z	VR4 1
	PLA
	STA.Z	VR4
	JMP	_BRK_FILE_OP_END

>_BRK_FILE_OP_DISK_RENAME
	JSR	DISK_SET_NAME
	STA.Z	VR11
	JMP	_BRK_FILE_OP_END

>_BRK_FILE_OP_DISK_TEST
	JSR	FLOPPY_ENTER
	JSR	FLOPPY_DISK_CHECK
	PHA
	JSR	FLOPPY_EXIT
	PLA
	STA.Z	VR11
	JMP	_BRK_FILE_OP_END
