; returns information about a process
; proc id in vr4/1 if proc id is 0xff then return stats about the active proc
; vr3 is pointer to buffer where stats will be put
; arr[0:1] = PC
; arr[2] = stack
; arr[3] = state
; arr[4] = num code pages
; arr[5] = num data pages

>BRK_PROCSTAT
	LDX.Z	VR4			; load given proc id
	CPX.I	0XFF			; test if equal to 0xff
	BEQ	_BRK_PROCSTAT_ACTIVE	; use active proc id if so
	CPX.I	PROC_COUNT		; test if in range
	BGE	_BRK_PROCSTAT_END	; just return if not in range
	BRA	_BRK_PROCSTAT_CONT	; keep going with current id
>_BRK_PROCSTAT_ACTIVE
	LDX	PROC_ACTIVE_ID		; load active id
>_BRK_PROCSTAT_CONT
	TXA				; move id to A
	ASL				; id * 2 for PC offset
	TAX				; back to X
	LDA.X	PROC_PC			; load pc low
	LDY.I	0			; set Y to 0
	STA.ZPY	VR3			; store low pc in arr[0]
	LDA.X	PROC_PC 1		; load pc high
	INY				; set Y to 1
	STA.ZPY	VR3			; store high pc in arr[1]
	TXA				; 2 * id to A
	LSR				; revert to id
	TAX				; id to X
	LDA.X	PROC_S			; load proc stack
	INY				; set Y to 2
	STA.ZPY	VR3			; store stack in arr[2]
	LDA.X	PROC_STATE		; load proc state
	INY				; set Y to 3
	STA.ZPY	VR3			; store state in arr[3]
	STZ.Z	VR8			; set code page counter to 0
	STZ.Z	VR8 1			; set data page counter to 0
	LDY.I	0			; set page index to 0
>_BRK_PROCSTAT_LOOP
	TXA				; proc id to A
	CMP.Y	PAGE_TABLE_PROCID	; test if page is owned by same proc
	BNE	_BRK_PROCSTAT_LOOP_NEXT	; go to next page if not owned by same proc
	LDA.Y	PAGE_TABLE_HOME		; load home value to test page type
	CMP.I	0X80			; test if home is >= 0x80
	BGE	_BRK_PROCSTAT_LOOP_DATA	; if so then count a data page
	INC.Z	VR8			; inc code page count
	BRA	_BRK_PROCSTAT_LOOP_NEXT	; go next
>_BRK_PROCSTAT_LOOP_DATA
	INC.Z	VR8 1			; inc data page count
>_BRK_PROCSTAT_LOOP_NEXT
	INY				; increment page id
	CPY.I	PAGE_COUNT_TOTAL	; test if done with all pages
	BNE	_BRK_PROCSTAT_LOOP	; loop if not
	LDY.I	4			; set Y to 4
	LDA.Z	VR8			; load code page count
	STA.ZPY	VR3			; set arr[4] to code page count
	LDA.Z	VR8 1			; load data page count
	INY				; set Y to 5
	STA.ZPY	VR3			; set arr[5] to data page count
>_BRK_PROCSTAT_END
	JMP	PROC_UNPAUSE
