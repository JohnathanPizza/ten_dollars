; BRK_WRITEC
; P --- VR4/1: character C
; R --- VR11/1: success bool S
; writes the single character C to the write buffer and and starts a write operation if not in progress already
; returns if the character was written or not in S
; S = TRUE means the character was written, S = FALSE means it was not and the caller should try again later

>BRK_WRITEC
	STA	HW_ENABLE_ADDR HW_RAM1 HW_VIA	; turn on VIA to update IER
	LDA.I	VIA_IER_ENABLE VIA_IB_CB1	; load value to enable write IER
	STA	VIA_IER			; enable
	STA	HW_ENABLE_ADDR HW_RAM1	; turn off VIA
	LDA.I	TRUE			; load true value
	STA	IO_WRITE_STATUS		; store true in status to signal write operation is happening
	LDA	IO_WRITE_BUFFER_HEAD	; load buffer head value
	INC				; inc
	CMP	IO_WRITE_BUFFER_TAIL	; compare to tail value
	BEQ	_BRK_WRITEC_FAIL	; if equal then no room in buffer, fail
	DEC				; dec buffer head
	TAY				; move head value to Y
	LDA.Z	VR4			; load C
	STA.Y	IO_WRITE_BUFFER		; store in write buffer
	INC	IO_WRITE_BUFFER_HEAD	; inc buffer head value
	LDA.I	TRUE			; load success value
	STA.Z	VR11			; store in S
	JMP	PROC_UNPAUSE		; return to proc
>_BRK_WRITEC_FAIL
	LDA.I	FALSE			; load fail value
	STA.Z	VR11			; store in S
	JMP	PROC_UNPAUSE		; return to proc
