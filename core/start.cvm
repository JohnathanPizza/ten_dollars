; entrypoint in intitialization code when the computer is turned on or reset

@0X8000
>START
	; hardware initialization
	
	; setting stack pointer
	LDX.I	0XFF	; load stack pointer default value
	TXS		; set stack pointer to 0x1FF

	; turning on hardware modules
	STA	HW_ENABLE_ADDR HW_RAM1 HW_VIA	; enable RAM1 and VIA

	; setting register values in the VIA
	LDA.I	0B11000101		; initial value for the PCR
	STA	VIA_PCR			; update PCR
	STZ	VIA_READ_PORT_DIR	; set the reading port to all input
	STZ	VIA_WRITE_PORT		; preset the write port to output 0
	LDA.I	0XFF			; load value to set write port to all output
	STA	VIA_WRITE_PORT_DIR	; set write port to all output
	LDA.I	0B00000000		; load initial ACR value
	STA	VIA_ACR			; store into ACR
	LDA.I	VIA_IER_ENABLE VIA_IB_CA1 VIA_IB_T2	; enable keyboard and T2 at start
	STA	VIA_IER			; enable
	LDA	VIA_READ_PORT		; clear any random possible interrupt quickly
	LDA	VIA_T2L			; same
	STA	HW_ENABLE_ADDR HW_RAM1	; disable VIA since setup is done

	; initialize RAM variables

	; zero everything from 0X200 to 0XFFF
	STZ.Z	VR0
	LDA.I	0X2
	STA.Z	VR0 1
	STZ.Z	VR4
	LDA.I	0XE
	STA.Z	VR4 1
	STZ.Z	VR5
	JSR	MEMSET			; clear 0x200 to 0xFFF
	
	LDA.I	PAGE_TABLE_PROCID	; set page procids to 0xFF
	STA.Z	VR0
	LDA.I	PAGE_TABLE_PROCID > 8
	STA.Z	VR0 1
	LDA.I	PAGE_COUNT_TOTAL
	STA.Z	VR4
	STZ.Z	VR4 1
	LDA.I	0XFF
	STA.Z	VR5
	JSR	MEMSET

	LDA.I	PAGE_MAP		; set map values to 0xFF
	STA.Z	VR0
	LDA.I	PAGE_MAP > 8
	STA.Z	VR0 1
	LDA.I	PAGE_COUNT_TOTAL
	STA.Z	VR4
	STZ.Z	VR4 1
	LDA.I	0XFF
	STA.Z	VR5
	JSR	MEMSET

	LDA.I	PROC_PARENT		; set parent values to 0xFF
	STA.Z	VR0
	LDA.I	PROC_PARENT > 8
	STA.Z	VR0 1
	LDA.I	PAGE_COUNT_TOTAL
	STA.Z	VR4
	STZ.Z	VR4 1
	LDA.I	0XFF
	STA.Z	VR5
	JSR	MEMSET

	LDA.I	0XFF
	STA	PROC_ACTIVE_ID		; no proc active id at first
	STA	IO_FILE_CLAIM		; clear file claim

	; init finished
	
	LDA.I	ROM_SHELL_ID
	STA.Z	VR4
	LDA.I	BC_SPAWN_ROM
	BRK

	LDA.Z	VR11
	STA	IO_READ_FOCUS

	JMP	SERVICE_CYCLE_BEGIN	; start the very first service cycle
