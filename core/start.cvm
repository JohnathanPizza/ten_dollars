; entrypoint in intitialization code when the computer is turned on or reset

@0X8000
>START
	; hardware initialization
	
	; setting stack pointer
	LDX.I	0XFF	; load stack pointer default value
	TXS		; set stack pointer to 0x1FF

	; turning on hardware modules
	STA	HW_ENABLE_ADDR HW_RAM1 HW_VIA	; enable RAM1 and VIA

	; setting register values in the VIA
	LDA.I	0B11000101		; initial value for the PCR
	STA	VIA_PCR			; update PCR
	STZ	VIA_READ_PORT_DIR	; set the reading port to all input
	STZ	VIA_WRITE_PORT		; preset the write port to output 0
	LDA.I	0XFF			; load value to set write port to all output
	STA	VIA_WRITE_PORT_DIR	; set write port to all output
	LDA.I	0B00000000		; load initial ACR value
	STA	VIA_ACR			; store into ACR
	LDA.I	VIA_IER_ENABLE VIA_IB_CA1	; enable keyboard at start since it will always be on
	STA	VIA_IER			; enable
	BIT	VIA_READ_PORT		; clear any random possible interrupt quickly
	STA	HW_ENABLE_ADDR HW_RAM1	; disable VIA since setup is done

	; initialize RAM variables

	; zero everything from 0X200 to 0XFFF
	STZ.Z	VR0
	LDA.I	0X2
	STA.Z	VR0 1
	STZ.Z	VR4
	LDA.I	0XE
	STA.Z	VR4 1
	STZ.Z	VR5
	JSR	MEMSET			; clear 0x200 to 0xFFF
	
	LDA.I	PAGE_TABLE_PROCID	; set page procids to 0xFF
	STA.Z	VR0
	LDA.I	PAGE_TABLE_PROCID > 8
	STA.Z	VR0 1
	LDA.I	PAGE_COUNT_TOTAL
	STA.Z	VR4
	STZ.Z	VR4 1
	LDA.I	0XFF
	STA.Z	VR5
	JSR	MEMSET

	LDA.I	PAGE_MAP		; set map values to 0xFF
	STA.Z	VR0
	LDA.I	PAGE_MAP > 8
	STA.Z	VR0 1
	LDA.I	0XFF
	STA.Z	VR5
	JSR	MEMSET

	LDA.I	0XFF
	STA	PROC_ACTIVE_ID		; no proc active id at first
	STA	IO_WRITE_CLAIM		; clear write claim
	STA	IO_FILE_CLAIM		; clear file claim

	; init finished

	CLI				; interrupts on
	
	LDA.I	ASCII_ESC
	JSR	PRINTC
	LDA.I	ASCII_E
	JSR	PRINTC
	
	LDA.I	FMTSTR
	STA.Z	VR0
	LDA.I	FMTSTR > 8
	STA.Z	VR0 1
	JSR	PRINTS
	JSR	PRINTWAIT
	JSR	FLOPPY_FORMAT
	JSR	PRINTB
	JSR	PRINTL
	JSR	PRINTWAIT

	jmp hang2

	lda.i	enable_str
	sta	vr0
	lda.i	enable_str > 8
	sta	vr0 1
	jsr	prints
	jsr	printwait
	lda.i	0
	sta	vr4
	lda.i	1
	sta	vr4 1
	jsr	print_sec
	lda.i	1
	jsr	file_enable
	jsr	printb
	jsr	printl
	jsr	printwait
	lda.i	2
	jsr	file_enable
	jsr	printb
	jsr	printl
	jsr	printwait
	lda.i	3
	jsr	file_enable
	jsr	printb
	jsr	printl
	jsr	printwait
	lda.i	4
	jsr	file_enable
	jsr	printb
	jsr	printl
	jsr	printwait
	jsr	print_sec
	
	lda.i	disable_str
	sta	vr0
	lda.i	disable_str > 8
	sta	vr0 1
	jsr	prints
	jsr	printwait
	lda.i	0
	sta	vr4
	lda.i	1
	sta	vr4 1
	jsr	print_sec
	lda.i	4
	jsr	file_disable
	jsr	printb
	jsr	printl
	jsr	printwait
	lda.i	3
	jsr	file_disable
	jsr	printb
	jsr	printl
	jsr	printwait
	jsr	print_sec

	lda.i	name_str
	sta	vr0
	lda.i	name_str > 8
	sta	vr0 1
	jsr	prints
	jsr	printwait
	lda.i	0
	sta	vr4
	lda.i	2
	sta	vr4 1
	jsr	print_sec
	lda.i	fname
	sta	vr0
	lda.i	fname > 8
	sta	vr0 1
	lda.i	2
	jsr	file_set_name
	jsr	printb
	jsr	printl
	jsr	printwait
	jsr	print_sec
	
	lda.i	disk_str
	sta	vr0
	lda.i	disk_str > 8
	sta	vr0 1
	jsr	prints
	jsr	printwait
	lda.i	0
	sta	vr4
	lda.i	7
	sta	vr4 1
	jsr	print_sec
	lda.i	fname
	sta	vr0
	lda.i	fname > 8
	sta	vr0 1
	jsr	disk_set_name
	jsr	printb
	jsr	printl
	jsr	printwait
	jsr	print_sec

	lda.i	space_str
	sta	vr0
	lda.i	space_str > 8
	sta	vr0 1
	jsr	prints
	jsr	printwait
	jsr	file_space
	jsr	printb
	jsr	printl
	jsr	printwait

	lda.i	find_str
	sta	vr0
	lda.i	find_str > 8
	sta	vr0 1
	jsr	prints
	jsr	printwait
	lda.i	fname
	sta	vr0
	lda.i	fname > 8
	sta	vr0 1
	jsr	file_find
	jsr	printb
	jsr	printl
	jsr	printwait
	stz	vr0
	stz	vr0 1
	jsr	file_find
	jsr	printb
	jsr	printl
	jsr	printwait
>hang

	lda.i	create_str
	sta	vr0
	lda.i	create_str > 8
	sta	vr0 1
	jsr	prints
	jsr	printwait
	lda.i	0
	sta	vr4
	lda.i	1
	sta	vr4 1
	jsr	print_sec
	lda.i	2
	sta	vr4 1
	jsr	print_sec
	lda.i	fname2
	sta	vr0
	lda.i	fname2 > 8
	sta	vr0 1
	jsr	file_create
	jsr	printb
	jsr	printl
	jsr	printwait
	jsr	file_create
	jsr	printb
	jsr	printl
	jsr	printwait
	lda.i	0
	sta	vr4
	lda.i	1
	sta	vr4 1
	jsr	print_sec
	lda.i	2
	sta	vr4 1
	jsr	print_sec

	lda.i	open_str
	sta	vr0
	lda.i	open_str > 8
	sta	vr0 1
	jsr	prints
	jsr	printwait
	lda	io_file_a_id
	jsr	printb
	jsr	printl
	jsr	printwait
	lda.i	fname2
	sta	vr0
	lda.i	fname2 > 8
	sta	vr0 1
	jsr	file_open_a
	jsr	printb
	jsr	printl
	jsr	printwait
	lda	io_file_a_id
	jsr	printb
	jsr	printl
	jsr	printwait

	lda.i	flush_str
	sta	vr0
	lda.i	flush_str > 8
	sta	vr0 1
	jsr	prints
	jsr	printwait
	lda.i	1
	sta	io_file_a_dirty
	lda	io_file_a_id
	sta	vr4
	lda.i	1
	sta	vr4 1
	jsr	print_sec
	lda.i	0x80
	sta	file_a_page
	lda.i	0x81
	sta	file_a_page 1
	lda.i	0x82
	sta	file_a_page 2
	lda.i	0x83
	sta	file_a_page 3
	jsr	file_flush_a
	jsr	printb
	jsr	printl
	jsr	printwait
	lda.i	io_file_a_id
	sta	vr4
	lda.i	1
	sta	vr4 1
	jsr	print_sec

	lda.i	load_str
	sta	vr0
	lda.i	load_str > 8
	sta	vr0 1
	jsr	prints
	stz	file_a_page 0
	stz	file_a_page 1
	stz	file_a_page 2
	stz	file_a_page 3
	jsr	file_load_a
	jsr	printb
	jsr	printl
	jsr	printwait
	lda	file_a_page
	jsr	printb
	lda	file_a_page 1
	jsr	printb
	lda	file_a_page 2
	jsr	printb
	lda	file_a_page 3
	jsr	printb
	jsr	printl
	jsr	printwait

	lda.i	close_str
	sta	vr0
	lda.i	close_str > 8
	sta	vr0 1
	jsr	prints
	lda	io_file_a_id
	jsr	printb
	jsr	printl
	jsr	printwait
	jsr	file_close_a
	jsr	printb
	jsr	printl
	jsr	printwait
	lda	io_file_a_id
	jsr	printb
	jsr	printl
	jsr	printwait

>hang2

	lda.i	create_str
	sta	vr0
	lda.i	create_str > 8
	sta	vr0 1
	jsr	prints
	jsr	printwait
	lda.i	0
	sta	vr4
	lda.i	1
	sta	vr4 1
	jsr	print_sec
	lda.i	2
	sta	vr4 1
	jsr	print_sec
	lda.i	fname
	sta	vr0
	lda.i	fname > 8
	sta	vr0 1
	jsr	file_create
	jsr	printb
	jsr	printl
	jsr	printwait
	lda.i	0
	sta	vr4
	lda.i	1
	sta	vr4 1
	jsr	print_sec
	lda.i	2
	sta	vr4 1
	jsr	print_sec
	
	lda.i	open_str
	sta	vr0
	lda.i	open_str > 8
	sta	vr0 1
	jsr	prints
	jsr	printwait
	lda	io_file_a_id
	jsr	printb
	jsr	printl
	jsr	printwait
	lda.i	fname
	sta	vr0
	lda.i	fname > 8
	sta	vr0 1
	jsr	file_open_a
	jsr	printb
	jsr	printl
	jsr	printwait
	lda	io_file_a_id
	jsr	printb
	jsr	printl
	jsr	printwait

	lda.i	rename_str
	sta	vr0
	lda.i	rename_str > 8
	sta	vr0 1
	jsr	prints
	jsr	printwait
	lda.i	0
	sta	vr4
	lda.i	2
	sta	vr4 1
	jsr	print_sec
	lda.i	fname2
	sta	vr0
	lda.i	fname2 > 8
	sta	vr0 1
	jsr	file_rename_a
	jsr	printb
	jsr	printl
	jsr	printwait
	lda.i	0
	sta	vr4
	lda.i	2
	sta	vr4 1
	jsr	print_sec

	lda.i	destroy_str
	sta	vr0
	lda.i	destroy_str > 8
	sta	vr0 1
	jsr	prints
	jsr	printwait
	lda.i	0
	sta	vr4
	lda.i	1
	sta	vr4 1
	jsr	print_sec
	lda.i	2
	sta	vr4 1
	jsr	print_sec
	jsr	file_destroy_a
	jsr	printb
	jsr	printl
	jsr	printwait
	lda.i	0
	sta	vr4
	lda.i	1
	sta	vr4 1
	jsr	print_sec
	lda.i	2
	sta	vr4 1
	jsr	print_sec

	;LDA.I	0			; load shell program code
	;JSR	LOADROM			; start a shell program in proc 0
	
	JMP	SERVICE_CYCLE_BEGIN	; start the very first service cycle

>FMTSTR
"format test 0=good\n\0

>ENABLE_STR
"enable test 1=good\n\0

>DISABLE_STR
"disable test 1=good\n\0

>NAME_STR
"set name test 1=good\n\0

>DISK_STR
"disk name test 1=good\n\0

>SPACE_STR
"space test 1-79=good\n\0

>FIND_STR
"find test 1-79=good\n\0

>CREATE_STR
"create test 0=good\n\0

>OPEN_STR
"open a test 0=good\n\0

>FLUSH_STR
"flush a test 0=good\n\0

>LOAD_STR
"load a test 0=good\n\0

>CLOSE_STR
"close a test 0=good\n\0

>RENAME_STR
"rename a test 0=good\n\0

>DESTROY_STR
"destroy a test 0=good\n\0

>FNAME
"epicfile\0

>FNAME2
"buttcheeks\0

;vr4 track
;vr4 1 sec
>PRINT_SEC
	jsr	retry_floppy_read
	jsr	printb
	jsr	printl
	jsr	printwait
	ldx.i	0
>print_sec_loop
	lda.x	floppy_page
	jsr	printb
	inx
	bne	print_sec_loop
	jsr	printl
	jsr	printwait
	rts
